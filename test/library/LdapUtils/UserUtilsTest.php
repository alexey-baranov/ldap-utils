<?php
namespace LdapUtils;

/**
 * Generated by PHPUnit_SkeletonGenerator 1.2.0 on 2013-10-05 at 09:02:14.
 */
class UserUtilsTest extends \PHPUnit_Framework_TestCase
{
    /**
     * @var UserUtils
     */
    protected $object;
    
    protected $ldapOptions;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp() {
        $this->object = new UserUtils;
        $this->ldapOptions = array("host" => "217.114.191.46",
            "useStartTls" => false,
            "accountDomainName" => "tele-plus.office",
            "accountCanonicalForm" => 4,
            "baseDn" => "DC=tele-plus,DC=office",
            "username"=> "hd",
            "password"=>"qwerty123!"
        );
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
    }

    /**
     * @covers LdapUtils\UserUtils::getShortUsername
     * @todo   Implement testGetShortUsername().
     */
    public function testGetShortUsername()
    {
        $this->assertEquals("alexey_baranov", UserUtils::getShortUsername("alexey_baranov"));
        $this->assertEquals("alexey_baranov", UserUtils::getShortUsername("alexey_baranov@tele-plus.office"));
    }

    /**
     * @covers LdapUtils\UserUtils::getUserByName
     * @todo   Implement testGetUserByName().
     */
    public function testGetUserByName()
    {
        $this->assertInstanceOf("Zend\Ldap\Node", UserUtils::getUserByName("alexey_baranov", $this->ldapOptions));
    }

    /**
     * @covers LdapUtils\UserUtils::collectNodeMemberOf
     * @todo   Implement testCollectNodeMemberOf().
     */
    public function testCollectNodeMemberOf()
    {
        $memberOf= array();
        UserUtils::collectNodeMemberOf(UserUtils::getUserByName("alexey_baranov", $this->ldapOptions), $memberOf);
        $this->assertNotEmpty($memberOf);
    }

    /**
     * @covers LdapUtils\UserUtils::getNodeMemberOf
     * @todo   Implement testGetNodeMemberOf().
     */
    public function testGetNodeMemberOf()
    {
        $this->assertNotEmpty(UserUtils::getNodeMemberOf(UserUtils::getUserByName("alexey_baranov", $this->ldapOptions)));
    }

    /**
     * @covers LdapUtils\UserUtils::getUSERMemberOf
     * @todo   Implement testGetUSERMemberOf().
     */
    public function testGetUSERMemberOf()
    {
        $this->assertNotEmpty(UserUtils::getUSERMemberOf("alexey_baranov", $this->ldapOptions));
    }

    /**
     * @covers LdapUtils\UserUtils::isUSERMemberOF
     * @todo   Implement testIsUSERMemberOF().
     */
    public function testIsUSERMemberOF()
    {
        $this->assertTrue(UserUtils::isUSERMemberOF("alexey_baranov", "4AB10424-6406-40DE-9873-F60B52992EAA", $this->ldapOptions));
    }

    /**
     * @covers LdapUtils\UserUtils::compareObjectGuids
     */
    public function testCompareObjectGuids()
    {
        $this->assertTrue(UserUtils::compareObjectGuids("2404b14a0664de409873f60b52992eaa", "2404b14a0664de409873f60b52992eaa"));
        $this->assertTrue(UserUtils::compareObjectGuids("2404b14a0664de409873f60b52992eaa", "4AB10424-6406-40DE-9873-F60B52992EAA"));
        $this->assertTrue(UserUtils::compareObjectGuids("4AB10424-6406-40DE-9873-F60B52992EAA", "2404b14a0664de409873f60b52992eaa"));
    }
}